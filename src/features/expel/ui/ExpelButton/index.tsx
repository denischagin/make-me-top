import { Button } from '@shared/ui/Button';
import { buttonSize } from '@shared/ui/Button/interfaces';
import { useLeaveCourseByExplorerIdMutation } from '@entities/course';
import { ExpelButtonProps } from '@features/expel';
import toast from 'react-hot-toast';
import { ConfirmModal } from '@shared/ui/ConfirmModal';
import { useState } from 'react';

export const ExpelButton = ({ explorerId }: ExpelButtonProps) => {
    const [expelExplorer] = useLeaveCourseByExplorerIdMutation();
    const [isOpenConfirmExpel, setIsOpenConfirmExpel] = useState(false);
    const handleExpelExplorerClick = () => {
        expelExplorer(explorerId)
            .unwrap()
            .then(handleSuccessExpelExplorer);
    };

    const handleSuccessExpelExplorer = () => {
        toast('–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —á–ª–µ–Ω–∞ —ç–∫–∏–ø–∞–∂–∞', {
            icon: 'üòî',
        });
    };

    return (
        <>
            <Button title={'–û—Ç—á–∏—Å–ª–∏—Ç—å'} size={buttonSize.small} onClick={() => setIsOpenConfirmExpel(true)} />

            <ConfirmModal
                confirmTitle={'–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—á–∏—Å–ª–∏—Ç—å —ç—Ç–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è?'}
                rejectButtonTitle={'–ù–µ—Ç'}
                submitButtonTitle={'–î–∞, —è —Ö–æ—á—É –æ—Ç—á–∏—Å–ª–∏—Ç—å'}
                onSubmit={handleExpelExplorerClick}
                onClose={() => setIsOpenConfirmExpel(false)}
                isOpen={isOpenConfirmExpel}
            />
        </>
    );
};